// 1. Добавление задачи в список:
// 1.1. Создание обработчика события submit на форме.
// 1.2. Добавление элемента списка <li>, содержащий текст задачи и чекбокс.
// 1.3. Если задача добавлена, скрывается сообщение "No tasks / Нет задач".
// 2. Чекбоксы и кнопка «Очистить список»:

// 2.1. Каждый раз, когда меняется состояние любого чекбокса, проверка, активны ли какие-то чекбоксы.
// Если хотя бы один чекбокс активен, кнопка «Очистить список» становится активной.

// 3. Очистка списка:
// 3.1. По клику на кнопку «Очистить список» удаление всех задач, у которых стоят галочки.

/*Обновлённый план:
При загрузке страницы нужно проверять Local Storage. Если в нём есть сохранённые задачи, отображаем их в списке.
Если задач нет, показываем серое уведомление о том, что задач нет, и отключаем кнопку «Очистить список».
Каждая задача в списке должна иметь неактивный чекбокс.
Изменение состояния чекбоксов:

После добавления задачи чекбокс должен быть неактивным.
При клике на чекбокс задача помечается как выполненная (активируется чекбокс), а это состояние также должно сохраняться в Local Storage.
Активация/деактивация кнопки «Очистить список»:

Кнопка «Очистить список» должна быть активной, если хотя бы одна задача добавлена в список.
Если задач нет или они все удалены, кнопка деактивируется.
Очистка списка:

При нажатии на кнопку «Очистить список» все задачи должны быть удалены из списка и Local Storage.
Список очищается, появляется уведомление о том, что задач нет, и кнопка «Очистить список» снова становится неактивной.
Сохранение состояния в Local Storage:

Когда задача добавляется, удаляется или изменяется её статус выполнения, обновляем данные в Local Storage.
При перезагрузке страницы задачи должны загружаться из Local Storage и отображаться с соответствующими статусами чекбоксов.


Основные шаги для реализации JavaScript:
1. Добавление задачи в список и Local Storage:
[При нажатии на кнопку «Добавить» необходимо добавить текст задачи в список, а также сохранить её в Local Storage, 
чтобы она сохранялась при перезагрузке страницы. Проверка на пустое поле: если текст задачи пуст, 
выводим сообщение об ошибке (например, под полем ввода).]
1.1. Создание функции для добавления задач в список и их сохранения в Local Storage.
1.2. Каждый раз, когда пользователь добавляет новую задачу, она записывается в Local Storage 
в виде объекта с текстом задачи и её состоянием (выполнена или нет).
2. Чтение задач из Local Storage:
2.1. При загрузке страницы вызов функции, которая проверяет Local Storage на наличие задач 
и отображает их в списке, включая сохранённое состояние чекбоксов.
3. Изменение состояния чекбоксов:
3.1. Добавление обработчика события на каждый чекбокс, чтобы при клике изменялось его состояние 
(выполнена задача или нет), и обновляй Local Storage.
4. Очистка списка и Local Storage:
4.1. При нажатии на кнопку «Очистить список» удаляются задачи как из DOM (интерфейса страницы), так и из Local Storage. */